{"version":3,"sources":["img/logo.png","common/constants.js","app/hooks.js","common/AuthContext.js","admin/adapters/authProvider.js","admin/adapters/requestUtils.js","admin/adapters/SpringResponse.js","admin/adapters/dataProvider.js","rootReducer.js","rootSaga.js","store.js","admin/Dashboard.js","admin/resources/user.js","admin/resources/dwcc.js","admin/DwccAdmin.js","admin/index.js","app/Routes.js","app/Login.js","app/LandingPage.js","app/App.js","serviceWorker.js","common/bugsnag.js","index.js"],"names":["module","exports","googleIdentityClientId","process","allowedHostedDomain","checkAuthorization","idToken","fetch","headers","handleNonOk","response","status","Error","ok","AuthContext","React","createContext","isSignedIn","signIn","signOut","googleAuthApi","Promise","resolve","stringifyPagination","paginationObj","sortObj","query","_","isEmpty","page","perPage","size","Array","sort","map","sortItem","join","values","Object","stringify","FilterProcessor","filter","str","endingIdPattern","hasOwnProperty","searchURI","keys","length","match","upperFirst","replace","_filter","assign","UrlPartsGenerator","params","paginationPart","pagination","path","getPath","queryString","trim","stringifyFilter","constructedFilter","target","id","SpringResponse","json","resource","data","total","resources","get","combineReducers","admin","adminReducer","i18n","i18nReducer","defaultI18nProvider","form","formReducer","router","routerReducer","rootSaga","dataProvider","apiUrl","httpClient","fetchUtils","fetchJson","convertDataRequestToHTTP","type","url","window","currentUser","getAuthResponse","id_token","options","Headers","Accept","Authorization","GET_LIST","forList","GET_ONE","GET_MANY","GET_MANY_REFERENCE","forManyReference","CREATE","method","body","JSON","UPDATE","DELETE","console","log","convertHTTPResponse","toReactAdminResourceListResponse","UPDATE_MANY","all","ids","then","responses","DELETE_MANY","springDataProvider","i18nProvider","adminSaga","authProvider","fork","adminHistory","createHashHistory","store","initialState","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","createStore","rootReducer","applyMiddleware","formMiddleware","routerMiddleware","run","configureStore","Title","title","style","minHeight","UsersList","props","List","bulkActions","Datagrid","rowClick","TextField","source","label","FunctionField","render","user","isAdmin","isDisabled","DwccList","DwccAdmin","Admin","dashboard","Dashboard","history","Resource","name","list","Component","childContextTypes","PropTypes","object","Home","useContext","nameOfUser","getBasicProfile","getName","className","fontWeight","marginBottom","to","onClick","AnotherPage","Routes","exact","component","Login","LandingPage","src","logo","alt","App","authState","useState","setGoogleAuthApi","setSignedIn","useEffect","isNil","gapi","load","auth2","init","client_id","hosted_domain","auth","catch","e","alert","useAuth","Provider","value","Boolean","location","hostname","bugsnagClient","bugsnag","REACT_APP_BUGSNAG_API_KEY","use","bugsnagReact","ErrorBoundary","getPlugin","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e9f5307.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2305a658.png\";","export const isDevEnv = process.env.NODE_ENV === \"development\";\n\nexport const googleIdentityClientId = process.env.REACT_APP_GOOGLE_IDENTITY_CLIENT_ID\n\nexport const allowedHostedDomain = process.env.REACT_APP_GOOGLE_IDENTITY_ALLOWED_HOSTED_DOMAIN\n","import { useState, useEffect } from 'react'\nimport isNil from \"lodash.isnil\"\n\nimport { googleIdentityClientId, allowedHostedDomain } from \"../common/constants\"\n\nconst checkAuthorization = (idToken) =>\n    fetch(\"/api/checkAuthorization\", {\n        headers: {\n            \"Authorization\": `Bearer ${idToken}`\n        }\n    })\n\nconst handleNonOk = response => {\n    if (response.status === 401 || response.status === 403)\n        throw Error(\"You do not have permissions to access this application. \" +\n            \"Contact your organisation's administrator\")\n    else if (!response.ok)\n        throw Error(\"Unable to validate credentials\")\n    return response\n}\n\nexport default function useAuth() {\n    const [googleAuthApi, setGoogleAuthApi] = useState(null)\n    const [isSignedIn, setSignedIn] = useState(false)\n\n    const signIn = () => {\n        googleAuthApi.signIn().then(user => {\n            checkAuthorization(user.getAuthResponse().id_token)\n            .then(handleNonOk)\n            .then(() => setSignedIn(true))\n            .catch(e => {\n                googleAuthApi.signOut()\n                alert(e)\n            })\n        })\n    }\n\n    const signOut = () => {\n        googleAuthApi.signOut().then(() => setSignedIn(false))\n    }\n\n    useEffect(() => {\n        if (isNil(googleAuthApi)) {\n            window.gapi.load('auth2', () => {\n                window\n                .gapi\n                .auth2\n                .init({\n                    client_id: googleIdentityClientId,\n                    hosted_domain: allowedHostedDomain\n                })\n                .then(auth => {\n                    setGoogleAuthApi(auth)\n                    if (auth.isSignedIn.get()) setSignedIn(true)\n                })\n            })\n        }\n    })\n\n    return {\n        isSignedIn,\n        signIn,\n        signOut,\n        googleAuthApi\n    }\n}","import React from 'react'\n\nconst shape = {\n    isSignedIn: false,\n    signIn: () => {},\n    signOut: () => {},\n    googleAuthApi: {},\n}\n\nexport const AuthContext = React.createContext(shape)\n","export default () => Promise.resolve();\n","import _ from \"lodash\";\nimport { stringify } from 'query-string';\n\n\nconst stringifyPagination = (paginationObj, sortObj) => {\n    const query = {};\n    if (!_.isEmpty(paginationObj)) {\n        const { page, perPage } = paginationObj;\n        query.page = page - 1;\n        query.size = perPage;\n    }\n\n    if (!_.isEmpty(sortObj)) {\n        if (sortObj instanceof Array) {\n            query.sort = sortObj.map((sortItem) => _.join(_.values(sortItem), \",\"));\n        } else if (sortObj instanceof Object) {\n            query.sort = _.join(_.values(sortObj), \",\");\n        } else {\n            query.sort = sortObj;\n        }\n    }\n    return stringify(query);\n};\n\nclass FilterProcessor {\n    static getPath(filter) {\n        if (_.isEmpty(filter)) return '';\n\n        let basePath = 'search';\n        const endingIdPattern = /Id$/;\n        const extractEntityName = str => _.upperFirst(str.replace(endingIdPattern, ''));\n\n        if (filter.hasOwnProperty('searchURI'))\n            return `${basePath}/${filter.searchURI}`;\n        if (_.keys(filter).length === 1 && _.keys(filter)[0].match(endingIdPattern))\n            return `${basePath}/findBy${extractEntityName(_.keys(filter)[0])}`;\n\n        return `${basePath}/find`;\n    }\n\n    static stringifyFilter(filter) {\n        let _filter = Object.assign({}, filter);\n        if (_filter.hasOwnProperty('searchURI'))\n            delete _filter.searchURI;\n        return stringify(_filter);\n    }\n}\n\nclass UrlPartsGenerator {\n    static forList(params) {\n        let paginationPart = stringifyPagination(params.pagination, params.sort);\n        let filter = params.filter;\n        let path = FilterProcessor.getPath(filter);\n        let queryString = _.trim([FilterProcessor.stringifyFilter(filter), paginationPart].join('&'), '&');\n        return `${path}?${queryString}`;\n    }\n\n    static forManyReference(params) {\n        let paginationPart = stringifyPagination(params.pagination, params.sort);\n        let constructedFilter = {};\n        constructedFilter[params.target] = params.id;\n        let path = FilterProcessor.getPath(constructedFilter);\n        path += `?${params.target}=${params.id}`;\n        path +=  `&${paginationPart}`;\n        return path;\n    }\n}\n\nexport { stringifyPagination, FilterProcessor, UrlPartsGenerator }\n","import _ from 'lodash';\n\nclass SpringResponse {\n    static toReactAdminResourceListResponse(json, resource) {\n        if (json[\"content\"]) {\n            return {\n                data: json['content'],\n                total: json[\"totalElements\"]\n            };\n        } else if (json['_embedded']) {\n            let resources = json['_embedded'][resource];\n            let page = json['page'];\n            let totalElements = page ? page[\"totalElements\"] : resources.length;\n            return {\n                data: resources,\n                total: totalElements\n            };\n        } else if (_.get(json, ['page', 'totalElements']) === 0) {\n            return {\n                data: [],\n                total: 0\n            }\n        } else {\n            return {\n                data: json,\n                total: json.length\n            };\n        }\n    }\n}\n\nexport default SpringResponse;","import _ from 'lodash';\nimport {fetchUtils, CREATE, UPDATE, DELETE_MANY,\n    GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE,\n    UPDATE_MANY, DELETE\n} from 'react-admin';\nimport { UrlPartsGenerator } from './requestUtils';\nimport SpringResponse from \"./SpringResponse\";\n\n/**\n * Maps react-admin queries to a simple REST API\n *\n * The REST dialect is similar to the one of FakeRest\n * @see https://github.com/marmelab/FakeRest\n * @example\n * GET_LIST     => GET http://my.api.url/posts?sort=['title','ASC']&range=[0, 24]\n * GET_ONE      => GET http://my.api.url/posts/123\n * GET_MANY     => GET http://my.api.url/posts?filter={ids:[123,456,789]}\n * UPDATE       => PUT http://my.api.url/posts/123\n * CREATE       => POST http://my.api.url/posts\n * DELETE       => DELETE http://my.api.url/posts/123\n */\nexport default (apiUrl, httpClient = fetchUtils.fetchJson) => {\n    /**\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} { url, options } The HTTP request parameters\n     */\n    const convertDataRequestToHTTP = (type, resource, params) => {\n        let url = `${apiUrl}/${resource}`;\n        const idToken = window.googleAuthApi.currentUser.get().getAuthResponse().id_token;\n        const options = {\n            headers: new Headers({\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${idToken}`\n            })\n        };\n        switch (type) {\n            case GET_LIST:\n                url = `${url}/${UrlPartsGenerator.forList(params)}`;\n                break;\n            case GET_ONE:\n                url = `${url}/${params.id}`;\n                break;\n            case GET_MANY:\n                url = `${url}/search/findAllById?ids=${_.join(params[\"ids\"])}`;\n                break;\n            case GET_MANY_REFERENCE:\n                url = `${url}/${UrlPartsGenerator.forManyReference(params)}`;\n                break;\n            case CREATE:\n                url = `${url}`;\n                options.method = 'POST';\n                options.body = JSON.stringify(params.data);\n                break;\n            case UPDATE:\n                url = `${url}/${params.id}`;\n                options.method = 'PUT';\n                options.body = JSON.stringify(params.data);\n                break;\n            case DELETE:\n                url = `${url}/${params.id}`;\n                options.method = 'DELETE';\n                break;\n            default:\n                throw new Error(`Unsupported fetch action type ${type}`);\n        }\n        console.log(`Data Provider Action ${type} | Url ${url} | Resource ${resource} | Params ${JSON.stringify(params)}`);\n        return {url, options};\n    };\n\n    /**\n     * @param {Object} response HTTP response from fetch()\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} Data response\n     */\n    const convertHTTPResponse = (response, type, resource, params) => {\n        const {json} = response;\n        switch (type) {\n            case GET_LIST:\n            case GET_MANY_REFERENCE:\n                return SpringResponse.toReactAdminResourceListResponse(json, resource);\n            case GET_MANY:\n                return SpringResponse.toReactAdminResourceListResponse(json, resource);\n            case CREATE:\n                return { data: {...params.data, id: json.id} };\n            case DELETE:\n                return { data: json || { id: null } };\n            default:\n                return { data: json };\n        }\n    };\n\n    /**\n     * @param {string} type Request type, e.g GET_LIST\n     * @param {string} resource Resource name, e.g. \"posts\"\n     * @param {Object} payload Request parameters. Depends on the request type\n     * @returns {Promise} the Promise for a data response\n     */\n    return (type, resource, params) => {\n        // simple-rest doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\n        if (type === UPDATE_MANY) {\n            return Promise.all(\n                params.ids.map(id =>\n                    httpClient.fetchJson(`${apiUrl}/${resource}/${id}`, {\n                        method: 'PUT',\n                        body: JSON.stringify(params.data),\n                    })\n                )\n            ).then(responses => ({\n                data: responses.map(response => response.json),\n            }));\n        }\n        // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n        if (type === DELETE_MANY) {\n            return Promise.all(\n                params.ids.map(id =>\n                    httpClient(`${apiUrl}/${resource}/${id}`, {\n                        method: 'DELETE',\n                    })\n                )\n            ).then(responses => ({\n                data: responses.map(response => response.json),\n            }));\n        }\n\n        const {url, options} = convertDataRequestToHTTP(\n            type,\n            resource,\n            params\n        );\n        return httpClient(url, options).then(response =>\n            convertHTTPResponse(response, type, resource, params)\n        );\n    };\n\n\n};\n","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form';\nimport { routerReducer } from 'react-router-redux';\nimport { adminReducer, defaultI18nProvider, i18nReducer } from 'react-admin';\n\n\nconst LOCALE = 'en';\n\nexport default combineReducers({\n    admin: adminReducer,\n    i18n: i18nReducer(LOCALE, defaultI18nProvider(LOCALE)),\n    form: formReducer,\n    router: routerReducer,\n    // other reducers\n});\n","import { all, fork } from 'redux-saga/effects';\nimport { adminSaga, defaultI18nProvider } from 'react-admin';\n\nimport { authProvider, dataProvider as springDataProvider } from './admin';\n\nconst dataProvider = springDataProvider('/api');\nconst i18nProvider = defaultI18nProvider;\n\n\nexport default function* rootSaga() {\n    yield all([\n        adminSaga(dataProvider, authProvider, i18nProvider),\n        // other sagas\n    ].map(fork));\n}\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport { formMiddleware } from 'react-admin';\nimport { routerMiddleware } from 'react-router-redux';\nimport { createHashHistory } from 'history';\n\nimport { isDevEnv } from \"./common/constants\";\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nexport const adminHistory = createHashHistory();\n\nconst configureStore = initialState => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const composeEnhancers = (isDevEnv && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n    const store = createStore(rootReducer,\n        initialState,\n        composeEnhancers(\n            applyMiddleware(\n                sagaMiddleware,\n                formMiddleware,\n                routerMiddleware(adminHistory),\n            )\n        )\n    );\n\n    sagaMiddleware.run(rootSaga);\n\n    return store;\n};\n\nexport const store = configureStore();\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Title } from 'react-admin';\nexport default () => (\n    <Card>\n        <Title title=\"DWCC Admin Console\" />\n        <CardContent style={{ minHeight: '90vh' }}>\n            <h1>Welcome to the administration area</h1>\n            <p>\n                In this section, you can...\n                <ul>\n                    <li>Authorize (staff) user accounts from Hasirudala organization to access this app</li>\n                    <li>Add/update DWCC master data</li>\n                    <li>Create/manage waste categories</li>\n                    <li>etc.</li>\n                </ul>\n            </p>\n        </CardContent>\n    </Card>\n);\n","import React from \"react\"\nimport {\n    List,\n    Datagrid,\n    TextField,\n    FunctionField\n} from 'react-admin'\n\nexport const UsersList = (props) => (\n    <List {...props} bulkActions={false} title=\"Authorized Users\">\n        <Datagrid rowClick=\"show\">\n            <TextField source=\"email\" label=\"Login/email ID\" />\n            <TextField source=\"name\" label=\"Name of the person\" />\n            <FunctionField label=\"Access\" render={ user => user.isAdmin ? 'Administrator' : 'Staff' } />\n            <FunctionField label=\"Status\" render={ user => user.isDisabled ? 'Disabled' : 'Active' } />\n        </Datagrid>\n    </List>\n);\n","import React from \"react\"\nimport {\n    List,\n    Datagrid,\n    TextField,\n    FunctionField\n} from 'react-admin'\n\nexport const DwccList = (props) => (\n    <List {...props} bulkActions={false} title=\"Dry Waste Centers\" />\n);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport { Admin, Resource } from \"react-admin\";\nimport authProvider from \"./adapters/authProvider\";\nimport { store, adminHistory } from \"../store\";\nimport Dashboard from './Dashboard'\nimport { UsersList } from \"./resources/user\"\nimport { DwccList } from \"./resources/dwcc\"\n\n\nexport default class DwccAdmin extends React.Component {\n    static childContextTypes = {\n        store: PropTypes.object\n    };\n\n    getChildContext() {\n        return { store }\n    }\n\n    render() {\n        return (\n            <Admin dashboard={Dashboard} authProvider={authProvider} history={adminHistory}>\n                <Resource name=\"users\" list={UsersList} />\n                <Resource name=\"dwcc\" list={DwccList} options={{ label: \"Dry Waste Centers\" }} />\n            </Admin>\n        );\n    }\n}\n","import authProvider from './adapters/authProvider';\nimport dataProvider from './adapters/dataProvider';\nimport DwccAdmin from './DwccAdmin'\n\nexport default DwccAdmin\nexport { authProvider, dataProvider }\n","import React, { useContext } from 'react'\nimport { Route, Link, Switch } from \"react-router-dom\"\n\nimport DwccAdmin from \"../admin\"\nimport { AuthContext } from \"../common/AuthContext\"\n\n\nfunction Home() {\n    const { googleAuthApi, signOut } = useContext(AuthContext)\n    const nameOfUser = googleAuthApi.currentUser.get().getBasicProfile().getName()\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h6 className=\"App-title\" style={{ fontWeight: 'lighter', marginBottom: \"-1.5em\" }}>Welcome</h6>\n                <h5 className=\"App-title\">{nameOfUser}</h5>\n                <br />\n                <h1>Under Construction</h1>\n                <br />\n                <Link to=\"/admin/\"><span className=\"App-link\">React Admin</span></Link>\n                <br />\n                <Link to=\"/abc/\"><span className=\"App-link\">Another Page</span></Link>\n                <br />\n                <button onClick={signOut}>Sign out</button>\n            </header>\n        </div>\n    )\n}\n\nconst AnotherPage = () => <div>Another Page</div>\n\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route exact path=\"/admin\" component={DwccAdmin} />\n            <Route exact path=\"/abc\" component={AnotherPage} />\n        </Switch>\n    )\n}\n","import React, { useContext } from 'react'\n\nimport { AuthContext } from \"../common/AuthContext\"\n\nexport default function Login() {\n    const { signIn } = useContext(AuthContext)\n    return (\n        <button onClick={ signIn }>Sign In</button>\n    )\n}\n","import React from 'react'\n\nimport logo from '../img/logo.png'\nimport Login from './Login'\n\n\nexport default function LandingPage() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h2 className=\"App-title\">DWCC MIS</h2>\n                <br />\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <br />\n                <Login />\n            </header>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport './App.css'\nimport useAuth from './hooks'\nimport { AuthContext } from '../common/AuthContext'\nimport Routes from './Routes'\nimport LandingPage from './LandingPage'\n\nfunction App() {\n    const authState = useAuth()\n    window.googleAuthApi = authState.googleAuthApi\n    return (\n        <AuthContext.Provider value={authState}>\n            {\n                authState.isSignedIn ?\n                    <Routes />\n                    :\n                    <LandingPage />\n            }\n        </AuthContext.Provider>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport bugsnag from '@bugsnag/js';\nimport bugsnagReact from '@bugsnag/plugin-react';\n\nconst bugsnagClient = bugsnag(process.env.REACT_APP_BUGSNAG_API_KEY || 'dummy');\nbugsnagClient.use(bugsnagReact, React);\n\nconst ErrorBoundary = bugsnagClient.getPlugin('react');\n\nexport { bugsnagClient, ErrorBoundary };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { store } from './store';\nimport { ErrorBoundary } from \"./common/bugsnag\";\n\n\nReactDOM.render(\n    <ErrorBoundary>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </ErrorBoundary>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}